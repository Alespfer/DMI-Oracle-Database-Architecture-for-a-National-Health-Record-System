-- ============================================================================
-- Fichier  : exploitation.sql
-- Objectif : Répondre aux 6 exercices du projet DMI
-- ============================================================================

SPOOL exploitation.txt


WHENEVER OSERROR CONTINUE
HOST chcp 65001 > nul
HOST export NLS_LANG=FRENCH_FRANCE.AL32UTF8
WHENEVER OSERROR EXIT


CONNECT DMI_APP/DMI_APP_PWD2025
SET SERVEROUTPUT ON
SET PAGESIZE 200
SET LINES 200
SET FEEDBACK ON
SET VERIFY OFF
SET DEFINE OFF
COLUMN titre FORMAT A50





SET LINESIZE 150
COLUMN posologie FORMAT A40
COLUMN duree_traitement_jours FORMAT 999
COLUMN nom FORMAT A20
COLUMN dosage_unitaire FORMAT A15
COLUMN num_dossier FORMAT A20


PROMPT ' '
PROMPT '================== 1. DOSSIER PATIENT « DURANT Philippe » =================='

DECLARE
    v_pid           PATIENT.id_patient%TYPE;
BEGIN
    SELECT id_patient
    INTO   v_pid
    FROM   PATIENT
    WHERE  nom = 'DURANT'
      AND  prenom = 'Philippe';

    DBMS_OUTPUT.PUT_LINE('ID patient = ' || v_pid);

        -- === 1.a Informations administratives ===
    DBMS_OUTPUT.PUT_LINE(chr(10) || '--- Informations administratives ---');
    FOR rec_pat IN (
        SELECT p.numero_ss, p.nom, p.prenom,
               TO_CHAR(p.date_naissance,'DD/MM/YYYY') AS dt_naiss, p.ville_naissance,
               p.sexe, p.groupe_sanguin, p.telephone, p.email, p.profession,
               a.rue || ', ' || a.code_postal || ' ' || a.ville AS adresse_residence,
               mt.nom || ' ' || mt.prenom AS medecin_traitant_nom
        FROM   PATIENT p
        LEFT JOIN ADRESSE a        ON p.id_adresse = a.id_adresse
        LEFT JOIN PROFESSIONNEL mt ON p.id_medecin_traitant = mt.id_professionnel
        WHERE  p.id_patient = v_pid
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('N° SS             : '|| rec_pat.numero_ss);
        DBMS_OUTPUT.PUT_LINE('Nom / Prénom      : '|| rec_pat.nom ||' '|| rec_pat.prenom);
        DBMS_OUTPUT.PUT_LINE('Date Naissance    : '|| rec_pat.dt_naiss || ' à ' || rec_pat.ville_naissance);
        DBMS_OUTPUT.PUT_LINE('Sexe              : '|| rec_pat.sexe);
        DBMS_OUTPUT.PUT_LINE('Groupe Sanguin    : '|| rec_pat.groupe_sanguin);
        DBMS_OUTPUT.PUT_LINE('Téléphone         : '|| rec_pat.telephone);
        DBMS_OUTPUT.PUT_LINE('Email             : '|| rec_pat.email);
        DBMS_OUTPUT.PUT_LINE('Profession        : '|| rec_pat.profession);
        DBMS_OUTPUT.PUT_LINE('Adresse Résidence : '|| rec_pat.adresse_residence);
        DBMS_OUTPUT.PUT_LINE('Médecin Traitant  : '|| rec_pat.medecin_traitant_nom);
    END LOOP;

    -- === 1.b Historique hospitalisations ===
    DBMS_OUTPUT.PUT_LINE(chr(10) || '--- Historique hospitalisations ---');
    FOR rec IN (
        SELECT h.num_dossier,
               TO_CHAR(h.date_debut,'DD/MM/YYYY') AS deb,
               TO_CHAR(h.date_fin,'DD/MM/YYYY')   AS fin,
               h.motif,
               s.libelle AS service
        FROM   HOSPITALISATION h
        JOIN   SERVICE s ON s.id_service = h.id_service
        WHERE  h.id_patient = v_pid
        ORDER  BY h.date_debut DESC
    ) LOOP
        DBMS_OUTPUT.PUT_LINE(rec.num_dossier||' | '||rec.deb||' → '||NVL(rec.fin,'EN COURS')||
                             ' | '||rec.service||' | '||rec.motif);
    END LOOP;

    -- === 1.c Antécédents & diagnostics actifs ===
    DBMS_OUTPUT.PUT_LINE(chr(10) || '--- Antécédents & diagnostics ---');
    FOR rec IN (
        SELECT 'ANTECEDENT' AS type, a.description AS lib, a.date_debut AS dt
        FROM   ANTECEDENT a
        WHERE  a.id_patient = v_pid
        UNION ALL
        SELECT 'DIAGNOSTIC', pth.libelle, d.date_diagnostic
        FROM   DIAGNOSTIC_PATHOLOGIE d
        JOIN   PATHOLOGIE pth ON pth.id_pathologie = d.id_pathologie
        WHERE  d.id_patient = v_pid
          AND  d.statut = 'Actif'
    ) LOOP
        DBMS_OUTPUT.PUT_LINE(rec.type||' - '||rec.lib||' ('||TO_CHAR(rec.dt,'DD/MM/YYYY')||')');
    END LOOP;
END;
/

PROMPT ' '
PROMPT '================== 2. MEDICAMENTS PRESCRITS (séjour 2023) =================='

SELECT lp.posologie,
       lp.duree_traitement_jours,
       m.nom,
       m.dosage_unitaire,
       h.num_dossier
FROM   PATIENT p
JOIN   HOSPITALISATION h ON h.id_patient = p.id_patient
JOIN   PRESCRIPTION pr   ON pr.id_hospitalisation = h.id_hospitalisation
JOIN   LIGNE_PRESCRIPTION_MEDICAMENT lp ON lp.id_prescription = pr.id_prescription
JOIN   MEDICAMENT m ON m.id_medicament = lp.id_medicament
WHERE  p.nom='DURANT'
  AND  p.prenom='Philippe'
  AND  h.num_dossier='HOSP-PD-2023-001';

PROMPT ' '
PROMPT '================== 3. DERNIERE INTERVENTION CHIRURGICALE PATIENT =================='

SELECT MAX(a.date_fin) AS derniere_chirurgie
FROM   PATIENT p
JOIN   ACTE_REALISE a           ON a.id_patient = p.id_patient
JOIN   TYPE_ACTE_REFERENTIEL t  ON t.id_type_acte = a.id_type_acte
WHERE  p.nom='DURANT'
  AND  p.prenom='Philippe'
  AND  t.est_chirurgical = 1;


PROMPT ' '
PROMPT '================== 4. MOYENNE ADMISSIONS HÔPITAL ROBERT DEBRE (2023-2025) =================='
DECLARE
  v_start_date DATE := TO_DATE('01-01-2023', 'DD-MM-YYYY');
  v_end_date   DATE := TO_DATE('01-01-2026', 'DD-MM-YYYY'); -- Borne supérieure exclusive
  v_total_admissions NUMBER;
  v_distinct_activity_days NUMBER;
  v_avg_admissions_per_active_day NUMBER;
BEGIN

  SELECT COUNT(*)
  INTO v_total_admissions
  FROM ETABLISSEMENT e
  JOIN SERVICE s ON s.id_etablissement = e.id_etablissement
  JOIN HOSPITALISATION h ON h.id_service = s.id_service
  WHERE UPPER(e.nom) LIKE '%HOPITAL ROBERT DEBRE%' 
    AND h.date_debut >= v_start_date
    AND h.date_debut < v_end_date;

  SELECT COUNT(DISTINCT TRUNC(h.date_debut))
  INTO v_distinct_activity_days
  FROM ETABLISSEMENT e
  JOIN SERVICE s ON s.id_etablissement = e.id_etablissement
  JOIN HOSPITALISATION h ON h.id_service = s.id_service
  WHERE UPPER(e.nom) LIKE '%HOPITAL ROBERT DEBRE%'
    AND h.date_debut >= v_start_date
    AND h.date_debut < v_end_date;

  IF v_distinct_activity_days > 0 THEN
    v_avg_admissions_per_active_day := ROUND(v_total_admissions / v_distinct_activity_days, 2);
  ELSE
    v_avg_admissions_per_active_day := 0; 
  END IF;

  DBMS_OUTPUT.PUT_LINE('Nombre total d''admissions (2023-2025): ' || v_total_admissions);
  DBMS_OUTPUT.PUT_LINE('Nombre de jours avec au moins une admission (2023-2025): ' || v_distinct_activity_days);
  DBMS_OUTPUT.PUT_LINE('Moyenne admissions/jour d''activité (2023-2025): ' || TO_CHAR(v_avg_admissions_per_active_day, '9990.99'));

END;
/


PROMPT ' '
PROMPT '================== 5. AJOUT PRESCRIPTION D’ACTE « CONSULTATION » =================='
DECLARE
    v_pid   PATIENT.id_patient%TYPE;
    v_type  TYPE_ACTE_REFERENTIEL.id_type_acte%TYPE;
    v_pro   PROFESSIONNEL.id_professionnel%TYPE;
    v_presc PRESCRIPTION.id_prescription%TYPE;
BEGIN
    SELECT id_patient        INTO v_pid   FROM PATIENT WHERE nom='DURANT'  AND prenom='Philippe';
    SELECT id_type_acte      INTO v_type  FROM TYPE_ACTE_REFERENTIEL WHERE libelle='Consultation générale';
    SELECT id_professionnel  INTO v_pro   FROM PROFESSIONNEL WHERE nom='MOREAU' AND prenom='Isabelle';

    INSERT INTO PRESCRIPTION
          (date_prescription, id_patient, id_prescripteur)
    VALUES (SYSDATE, v_pid, v_pro)
    RETURNING id_prescription INTO v_presc;

    INSERT INTO LIGNE_PRESCRIPTION_ACTE
          (nombre, id_prescription, id_type_acte)
    VALUES (1, v_presc, v_type);

    COMMIT;
    DBMS_OUTPUT.PUT_LINE('>> Prescription acte consultation ajoutée : ID = '||v_presc);
END;
/

PROMPT ' '
PROMPT '================== 6. CLOTURE DU SEJOUR EN COURS (Philippe DURANT) =================='
DECLARE
    v_hosp_id  HOSPITALISATION.id_hospitalisation%TYPE;
BEGIN
    SELECT h.id_hospitalisation
    INTO   v_hosp_id
    FROM   PATIENT p
    JOIN   HOSPITALISATION h ON h.id_patient = p.id_patient
    WHERE  p.nom='DURANT'
      AND  p.prenom='Philippe'
      AND  h.date_fin IS NULL         
    FOR UPDATE;

    UPDATE HOSPITALISATION
       SET date_fin     = SYSDATE,
           id_type_sortie = (SELECT id_type_sortie
                              FROM TYPE_SORTIE
                             WHERE libelle='Domicile')
     WHERE id_hospitalisation = v_hosp_id;

    COMMIT;
    DBMS_OUTPUT.PUT_LINE('>> Séjour ID '||v_hosp_id||' clôturé à la date du '||
                         TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI'));
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('>> Aucun séjour en cours à clôturer.');
END;
/

SPOOL OFF


