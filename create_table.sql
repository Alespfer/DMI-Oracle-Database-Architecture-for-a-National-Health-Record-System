
SPOOL Create_table.txt

WHENEVER SQLERROR EXIT SQL.SQLCODE; 

PROMPT '>> Connexion au schéma DMI'
CONNECT DMI_APP/DMI_APP_PWD2025 

PROMPT '>> Création des séquences pour les PK auto-générées'
CREATE SEQUENCE SEQ_ETABLISSEMENT START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_SERVICE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TYPE_PRO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_SPECIALITE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_PROFESSIONNEL START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_MESURE_CORPORALE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ADRESSE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_PATIENT START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_REPRESENTANT_LEGAL START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TYPE_ACTE_REFERENTIEL START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TYPE_EXAMEN START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_MEDICAMENT START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_PATHOLOGIE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TYPE_SORTIE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_HOSPITALISATION START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ANTECEDENT START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TIERS_PAYEUR START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_VACCINATION START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_SENSIBILITE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TYPE_SENSIBILITE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_PRESCRIPTION START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ALD START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_FACTEUR_RISQUE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_LIGNE_PRESCRIPTION_MED START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_LIGNE_PRESCRIPTION_ACTE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_EXAMEN START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_COMPTE_RENDU_EXAMEN START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ACTE_REALISE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_COMPTE_RENDU_OPERATOIRE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ANESTHESIE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TRANSFUSION START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_PRODUIT_SANGUIN START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_RECOMMANDATION START WITH 1 INCREMENT BY 1; 
CREATE SEQUENCE SEQ_CONSENTEMENT START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_OPPOSITION_ACCES START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ADRESSE_ETAB START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_NOTE_SOIN_INF START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TYPE_ANTECEDENT START WITH 1 INCREMENT BY 1;   
CREATE SEQUENCE SEQ_TYPE_REPRESENTANT START WITH 1 INCREMENT BY 1; 
CREATE SEQUENCE SEQ_TYPE_ANESTHESIE START WITH 1 INCREMENT BY 1;   

PROMPT '>> Création des tables'

-- 1. ETABLISSEMENT
CREATE TABLE ETABLISSEMENT (
    id_etablissement NUMBER DEFAULT SEQ_ETABLISSEMENT.NEXTVAL NOT NULL,
    nom              VARCHAR2(255) NOT NULL
) TABLESPACE DATA_DMI;

-- 2. ADRESSE
CREATE TABLE ADRESSE (
    id_adresse  NUMBER DEFAULT SEQ_ADRESSE.NEXTVAL NOT NULL,
    rue         VARCHAR2(255),
    code_postal VARCHAR2(10),
    ville       VARCHAR2(100)
) TABLESPACE DATA_DMI;

-- 3. ADRESSE_ETAB
CREATE TABLE ADRESSE_ETAB (
    id_adresse_etab  NUMBER DEFAULT SEQ_ADRESSE_ETAB.NEXTVAL NOT NULL,
    rue              VARCHAR2(255),
    code_postal      VARCHAR2(10),
    ville            VARCHAR2(100),
    id_etablissement NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 4. TYPE_PRO
CREATE TABLE TYPE_PRO (
    id_type_pro NUMBER DEFAULT SEQ_TYPE_PRO.NEXTVAL NOT NULL,
    libelle     VARCHAR2(100) NOT NULL
) TABLESPACE DATA_DMI;

-- 5. SPECIALITE
CREATE TABLE SPECIALITE (
    id_specialite NUMBER DEFAULT SEQ_SPECIALITE.NEXTVAL NOT NULL,
    libelle       VARCHAR2(100) NOT NULL
) TABLESPACE DATA_DMI;

-- 6. SERVICE
CREATE TABLE SERVICE (
    id_service       NUMBER DEFAULT SEQ_SERVICE.NEXTVAL NOT NULL,
    libelle          VARCHAR2(100) NOT NULL,
    id_etablissement NUMBER NOT NULL,
    id_responsable   NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 7. PROFESSIONNEL
CREATE TABLE PROFESSIONNEL (
    id_professionnel NUMBER DEFAULT SEQ_PROFESSIONNEL.NEXTVAL NOT NULL,
    nom              VARCHAR2(100) NOT NULL,
    prenom           VARCHAR2(100) NOT NULL,
    numero_rpps      VARCHAR2(20) NOT NULL,
    id_type_pro      NUMBER NOT NULL,
    id_service       NUMBER NULL
) TABLESPACE DATA_DMI;

-- 8. PROFESSIONNEL_SPECIALITE
CREATE TABLE PROFESSIONNEL_SPECIALITE (
    id_professionnel NUMBER NOT NULL,
    id_specialite    NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 9. PATIENT
CREATE TABLE PATIENT (
    id_patient          NUMBER DEFAULT SEQ_PATIENT.NEXTVAL NOT NULL,
    numero_ss           VARCHAR2(15) NOT NULL,
    nom                 VARCHAR2(100) NOT NULL,
    prenom              VARCHAR2(100) NOT NULL,
    date_naissance      DATE NOT NULL,
    sexe                CHAR(1) NOT NULL,
    telephone           VARCHAR2(20),
    email               VARCHAR2(255),
    profession          VARCHAR2(100),
    groupe_sanguin      VARCHAR2(3),
    ville_naissance     VARCHAR2(100) NULL, 
    id_medecin_traitant NUMBER NULL,
    id_adresse          NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 10. TYPE_REPRESENTANT
CREATE TABLE TYPE_REPRESENTANT (
    id_type_representant NUMBER DEFAULT SEQ_TYPE_REPRESENTANT.NEXTVAL NOT NULL,
    libelle              VARCHAR2(100) NOT NULL
) TABLESPACE DATA_DMI;

-- 11. REPRESENTANT_LEGAL
CREATE TABLE REPRESENTANT_LEGAL (
    id_representant      NUMBER DEFAULT SEQ_REPRESENTANT_LEGAL.NEXTVAL NOT NULL,
    nom                  VARCHAR2(100) NOT NULL,
    prenom               VARCHAR2(100) NOT NULL,
    telephone            VARCHAR2(20),
    date_debut_mandat    DATE NOT NULL,
    date_fin_mandat      DATE NULL,
    reference_document   VARCHAR2(255),
    commentaires         VARCHAR2(400),
    id_adresse           NUMBER NOT NULL,
    id_type_representant NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 12. EST_REPRESENTE_PAR
CREATE TABLE EST_REPRESENTE_PAR (
    id_patient      NUMBER NOT NULL,
    id_representant NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 13. MESURE_CORPORALE
CREATE TABLE MESURE_CORPORALE (
    id_mesure      NUMBER DEFAULT SEQ_MESURE_CORPORALE.NEXTVAL NOT NULL,
    date_mesure    DATE NOT NULL,
    poids          NUMBER(5,2),
    taille         NUMBER(3),
    ta_systolique  NUMBER(3),
    ta_diastolique NUMBER(3),
    glycemie       NUMBER(4,2),
    id_patient     NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 14. TYPE_ANTECEDENT
CREATE TABLE TYPE_ANTECEDENT (
    id_type_antecedent NUMBER DEFAULT SEQ_TYPE_ANTECEDENT.NEXTVAL NOT NULL,
    libelle            VARCHAR2(100) NOT NULL
) TABLESPACE DATA_DMI;

-- 15. ANTECEDENT
CREATE TABLE ANTECEDENT (
    id_antecedent      NUMBER DEFAULT SEQ_ANTECEDENT.NEXTVAL NOT NULL,
    description        VARCHAR2(3000) NOT NULL,
    date_debut         DATE NULL,
    date_fin           DATE NULL,
    id_patient         NUMBER NOT NULL,
    id_type_antecedent NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 16. VACCINATION
CREATE TABLE VACCINATION (
    id_vaccination NUMBER DEFAULT SEQ_VACCINATION.NEXTVAL NOT NULL,
    nom_vaccin     VARCHAR2(100) NOT NULL,
    date_injection DATE NOT NULL,
    id_patient     NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 17. TYPE_SENSIBILITE
CREATE TABLE TYPE_SENSIBILITE (
    id_type_sensibilite NUMBER DEFAULT SEQ_TYPE_SENSIBILITE.NEXTVAL NOT NULL,
    libelle             VARCHAR2(100) NOT NULL
) TABLESPACE DATA_DMI;

-- 18. SENSIBILITE
CREATE TABLE SENSIBILITE (
    id_sensibilite      NUMBER DEFAULT SEQ_SENSIBILITE.NEXTVAL NOT NULL,
    substance           VARCHAR2(150) NOT NULL,
    description         VARCHAR2(2000),
    date_signalement    DATE,
    date_fin            DATE NULL,
    id_patient          NUMBER NOT NULL,
    id_type_sensibilite NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 19. TYPE_SORTIE
CREATE TABLE TYPE_SORTIE (
    id_type_sortie NUMBER DEFAULT SEQ_TYPE_SORTIE.NEXTVAL NOT NULL,
    libelle        VARCHAR2(100) NOT NULL
) TABLESPACE DATA_DMI;

-- 20. HOSPITALISATION
CREATE TABLE HOSPITALISATION (
    id_hospitalisation             NUMBER DEFAULT SEQ_HOSPITALISATION.NEXTVAL NOT NULL,
    num_dossier                    VARCHAR2(50) NOT NULL,
    date_debut                     DATE NOT NULL,
    date_fin                       DATE NULL,
    motif                          VARCHAR2(3000),
    lettre_admission_contenu       VARCHAR2(3000),
    conclusion_evaluation_initiale VARCHAR2(3000),
    compte_rendu_sortie            VARCHAR2(3000),
    destination_sortie             VARCHAR2(100),
    fiche_liaison_infirmiere       VARCHAR2(3000),
    id_patient                     NUMBER NOT NULL,
    id_service                     NUMBER NOT NULL,
    id_type_sortie                 NUMBER NULL
) TABLESPACE DATA_DMI;

-- 21. TIERS_PAYEUR
CREATE TABLE TIERS_PAYEUR (
    id_tiers_payeur NUMBER DEFAULT SEQ_TIERS_PAYEUR.NEXTVAL NOT NULL,
    type            VARCHAR2(50) NOT NULL,
    nom             VARCHAR2(150) NOT NULL,
    code            VARCHAR2(20)
) TABLESPACE DATA_DMI;

-- 22. PATIENT_TIERS_PAYEUR
CREATE TABLE PATIENT_TIERS_PAYEUR (
    id_tiers_payeur   NUMBER NOT NULL,
    id_patient        NUMBER NOT NULL,
    num_contrat       VARCHAR2(50),
    niveau_couverture VARCHAR2(30), 
    date_fin_validite DATE
) TABLESPACE DATA_DMI;

-- 23. PATHOLOGIE
CREATE TABLE PATHOLOGIE (
    id_pathologie NUMBER DEFAULT SEQ_PATHOLOGIE.NEXTVAL NOT NULL,
    code          VARCHAR2(20),
    libelle       VARCHAR2(255) NOT NULL
) TABLESPACE DATA_DMI;

-- 24. DIAGNOSTIC_PATHOLOGIE
CREATE TABLE DIAGNOSTIC_PATHOLOGIE (
    id_pathologie   NUMBER NOT NULL,
    id_patient      NUMBER NOT NULL,
    statut          VARCHAR2(50),
    date_diagnostic DATE NOT NULL
) TABLESPACE DATA_DMI;

-- 25. PRESCRIPTION
CREATE TABLE PRESCRIPTION (
    id_prescription    NUMBER DEFAULT SEQ_PRESCRIPTION.NEXTVAL NOT NULL,
    date_prescription  DATE NOT NULL,
    id_patient         NUMBER NOT NULL,
    id_prescripteur    NUMBER NOT NULL,
    id_hospitalisation NUMBER NULL
) TABLESPACE DATA_DMI;

-- 26. MEDICAMENT
CREATE TABLE MEDICAMENT (
    id_medicament   NUMBER DEFAULT SEQ_MEDICAMENT.NEXTVAL NOT NULL,
    nom             VARCHAR2(150) NOT NULL,
    dosage_unitaire VARCHAR2(50),
    forme           VARCHAR2(50)
) TABLESPACE DATA_DMI;

-- 27. LIGNE_PRESCRIPTION_MEDICAMENT
CREATE TABLE LIGNE_PRESCRIPTION_MEDICAMENT (
    id_ligne_medicament    NUMBER DEFAULT SEQ_LIGNE_PRESCRIPTION_MED.NEXTVAL NOT NULL,
    quantite               NUMBER,
    posologie              VARCHAR2(100) NOT NULL,
    duree_traitement_jours NUMBER,
    nombre_renouvellements NUMBER DEFAULT 0,
    id_prescription        NUMBER NOT NULL,
    id_medicament          NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 28. TYPE_ACTE_REFERENTIEL
CREATE TABLE TYPE_ACTE_REFERENTIEL ( 
    id_type_acte    NUMBER DEFAULT SEQ_TYPE_ACTE_REFERENTIEL.NEXTVAL NOT NULL,
    libelle         VARCHAR2(150) NOT NULL,
    est_chirurgical NUMBER(1) DEFAULT 0 NOT NULL
) TABLESPACE DATA_DMI;

-- 29. LIGNE_PRESCRIPTION_ACTE
CREATE TABLE LIGNE_PRESCRIPTION_ACTE (
    id_ligne_acte   NUMBER DEFAULT SEQ_LIGNE_PRESCRIPTION_ACTE.NEXTVAL NOT NULL,
    nombre          NUMBER DEFAULT 1,
    id_prescription NUMBER NOT NULL,
    id_type_acte    NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 30. ALD
CREATE TABLE ALD (
    id_ald    NUMBER DEFAULT SEQ_ALD.NEXTVAL NOT NULL,
    libelle   VARCHAR2(255) NOT NULL
) TABLESPACE DATA_DMI;

-- 31. PATIENT_ALD
CREATE TABLE PATIENT_ALD (
    id_ald                     NUMBER NOT NULL,
    id_patient                 NUMBER NOT NULL,
    date_diagnostic            DATE NOT NULL,
    date_fin_prise_en_charge   DATE NULL
) TABLESPACE DATA_DMI;

-- 32. FACTEUR_RISQUE
CREATE TABLE FACTEUR_RISQUE (
    id_facteur NUMBER DEFAULT SEQ_FACTEUR_RISQUE.NEXTVAL NOT NULL,
    libelle    VARCHAR2(150) NOT NULL
) TABLESPACE DATA_DMI;

-- 33. PATIENT_FACTEUR_RISQUE
CREATE TABLE PATIENT_FACTEUR_RISQUE (
    id_patient NUMBER NOT NULL,
    id_facteur NUMBER NOT NULL,
    date_debut DATE,
    date_fin   DATE NULL,
    intensite  VARCHAR2(30) 
) TABLESPACE DATA_DMI;

-- 34. TYPE_EXAMEN 
CREATE TABLE TYPE_EXAMEN (
    id_type_examen NUMBER DEFAULT SEQ_TYPE_EXAMEN.NEXTVAL NOT NULL,
    libelle        VARCHAR2(150) NOT NULL
) TABLESPACE DATA_DMI;

-- 35. EXAMEN
CREATE TABLE EXAMEN (
    id_examen                     NUMBER DEFAULT SEQ_EXAMEN.NEXTVAL NOT NULL,
    date_examen                   DATE NOT NULL,
    date_resultats                DATE NULL,
    id_patient                    NUMBER NOT NULL,
    id_type_examen                NUMBER NOT NULL,
    id_professionnel_realisateur  NUMBER NOT NULL,
    id_professionnel_prescripteur NUMBER NULL,
    id_service                    NUMBER NULL, 
    id_hospitalisation            NUMBER NULL
) TABLESPACE DATA_DMI;

-- 36. COMPTE_RENDU_EXAMEN
CREATE TABLE COMPTE_RENDU_EXAMEN (
    id_compte_rendu NUMBER DEFAULT SEQ_COMPTE_RENDU_EXAMEN.NEXTVAL NOT NULL,
    contenu         VARCHAR2(3000) NOT NULL,
    date_redaction  DATE NOT NULL,
    date_signature  DATE NULL,
    statut          VARCHAR2(50),
    type_document   VARCHAR2(100),
    id_examen       NUMBER NOT NULL,
    id_redacteur    NUMBER NOT NULL 
) TABLESPACE DATA_DMI;

-- 37. ACTE_REALISE
CREATE TABLE ACTE_REALISE (
    id_acte                      NUMBER DEFAULT SEQ_ACTE_REALISE.NEXTVAL NOT NULL,
    date_debut                   DATE NOT NULL,
    date_fin                     DATE NULL,
    commentaires                 VARCHAR2(3000),
    id_patient                   NUMBER NOT NULL,
    id_type_acte                 NUMBER NOT NULL,
    id_professionnel_realisateur NUMBER NOT NULL,
    id_hospitalisation           NUMBER NULL
) TABLESPACE DATA_DMI;

-- 38. COMPTE_RENDU_OPERATOIRE
CREATE TABLE COMPTE_RENDU_OPERATOIRE (
    id_cr_op       NUMBER DEFAULT SEQ_COMPTE_RENDU_OPERATOIRE.NEXTVAL NOT NULL,
    date_redaction DATE NOT NULL,
    contenu        VARCHAR2(3000) NOT NULL,
    id_acte        NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 39. TYPE_ANESTHESIE
CREATE TABLE TYPE_ANESTHESIE (
    id_type_anesthesie NUMBER DEFAULT SEQ_TYPE_ANESTHESIE.NEXTVAL NOT NULL,
    libelle            VARCHAR2(100) NOT NULL
) TABLESPACE DATA_DMI;

-- 40. ANESTHESIE
CREATE TABLE ANESTHESIE (
    id_anesthesie             NUMBER DEFAULT SEQ_ANESTHESIE.NEXTVAL NOT NULL,
    date_heure_debut          DATE NOT NULL,
    date_heure_fin            DATE NULL,
    commentaires_per_op       VARCHAR2(3000),
    conclusion_post_op      VARCHAR2(3000), 
    id_anesthesiste           NUMBER NOT NULL, 
    id_acte_realise           NUMBER NOT NULL,
    id_type_anesthesie        NUMBER NOT NULL  
) TABLESPACE DATA_DMI;

-- 41. CONSENTEMENT
CREATE TABLE CONSENTEMENT (
    id_consentement NUMBER DEFAULT SEQ_CONSENTEMENT.NEXTVAL NOT NULL,
    date_signature  DATE NOT NULL,
    id_patient      NUMBER NOT NULL,
    id_acte_realise NUMBER NOT NULL 
) TABLESPACE DATA_DMI;

-- 42. PRODUIT_SANGUIN
CREATE TABLE PRODUIT_SANGUIN (
    id_produit_sanguin NUMBER DEFAULT SEQ_PRODUIT_SANGUIN.NEXTVAL NOT NULL,
    libelle            VARCHAR2(100) NOT NULL
) TABLESPACE DATA_DMI;

-- 43. TRANSFUSION
CREATE TABLE TRANSFUSION (
    id_transfusion         NUMBER DEFAULT SEQ_TRANSFUSION.NEXTVAL NOT NULL,
    groupe_sanguin_produit VARCHAR2(3),
    date_transfusion       DATE NOT NULL,
    id_hospitalisation     NUMBER NOT NULL,
    id_produit_sanguin     NUMBER NOT NULL,
    id_patient             NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 44. RECOMMANDATION (anciennement CORRESPONDANCE)
CREATE TABLE RECOMMANDATION (
    id_recommandation             NUMBER DEFAULT SEQ_RECOMMANDATION.NEXTVAL NOT NULL,
    date_envoi                    DATE NOT NULL,
    contenu                       VARCHAR2(3000) NOT NULL,
    id_patient                    NUMBER NOT NULL,
    id_professionnel_emetteur     NUMBER NOT NULL,
    id_professionnel_destinataire NUMBER NOT NULL
) TABLESPACE DATA_DMI;

-- 45. OPPOSITION_ACCES
CREATE TABLE OPPOSITION_ACCES (
    id_opposition_acces NUMBER DEFAULT SEQ_OPPOSITION_ACCES.NEXTVAL NOT NULL,
    type_donnee         VARCHAR2(100),
    date_opposition     DATE NOT NULL,
    motif               VARCHAR2(3000),
    id_patient          NUMBER NOT NULL,
    id_professionnel    NUMBER NULL 
) TABLESPACE DATA_DMI;

-- 46. NOTE_SOIN_INF
CREATE TABLE NOTE_SOIN_INF (
    id_note_soin       NUMBER DEFAULT SEQ_NOTE_SOIN_INF.NEXTVAL NOT NULL,
    date_soin          DATE NOT NULL,
    description        VARCHAR2(3000) NOT NULL,
    id_patient         NUMBER NOT NULL,
    id_infirmier       NUMBER NOT NULL, 
    id_hospitalisation NUMBER NULL
) TABLESPACE DATA_DMI;

PROMPT'>> Modification des tables : création des PK'
ALTER TABLE ETABLISSEMENT ADD CONSTRAINT PK_ETABLISSEMENT PRIMARY KEY (id_etablissement) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE SERVICE ADD CONSTRAINT PK_SERVICE PRIMARY KEY (id_service) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE TYPE_PRO ADD CONSTRAINT PK_TYPE_PRO PRIMARY KEY (id_type_pro) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE SPECIALITE ADD CONSTRAINT PK_SPECIALITE PRIMARY KEY (id_specialite) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE PROFESSIONNEL ADD CONSTRAINT PK_PROFESSIONNEL PRIMARY KEY (id_professionnel) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE MESURE_CORPORALE ADD CONSTRAINT PK_MESURE_CORPORALE PRIMARY KEY (id_mesure) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE ADRESSE ADD CONSTRAINT PK_ADRESSE PRIMARY KEY (id_adresse) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE PATIENT ADD CONSTRAINT PK_PATIENT PRIMARY KEY (id_patient) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE TYPE_REPRESENTANT ADD CONSTRAINT PK_TYPE_REPRESENTANT PRIMARY KEY (id_type_representant) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE REPRESENTANT_LEGAL ADD CONSTRAINT PK_REPRESENTANT_LEGAL PRIMARY KEY (id_representant) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE EST_REPRESENTE_PAR ADD CONSTRAINT PK_EST_REPRESENTE_PAR PRIMARY KEY (id_patient, id_representant) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE TYPE_ACTE_REFERENTIEL ADD CONSTRAINT PK_TYPE_ACTE_REFERENTIEL PRIMARY KEY (id_type_acte) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE TYPE_EXAMEN ADD CONSTRAINT PK_TYPE_EXAMEN PRIMARY KEY (id_type_examen) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE MEDICAMENT ADD CONSTRAINT PK_MEDICAMENT PRIMARY KEY (id_medicament) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE PATHOLOGIE ADD CONSTRAINT PK_PATHOLOGIE PRIMARY KEY (id_pathologie) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE TYPE_SORTIE ADD CONSTRAINT PK_TYPE_SORTIE PRIMARY KEY (id_type_sortie) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE HOSPITALISATION ADD CONSTRAINT PK_HOSPITALISATION PRIMARY KEY (id_hospitalisation) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE TYPE_ANTECEDENT ADD CONSTRAINT PK_TYPE_ANTECEDENT PRIMARY KEY (id_type_antecedent) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE ANTECEDENT ADD CONSTRAINT PK_ANTECEDENT PRIMARY KEY (id_antecedent) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE TIERS_PAYEUR ADD CONSTRAINT PK_TIERS_PAYEUR PRIMARY KEY (id_tiers_payeur) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE VACCINATION ADD CONSTRAINT PK_VACCINATION PRIMARY KEY (id_vaccination) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE TYPE_SENSIBILITE ADD CONSTRAINT PK_TYPE_SENSIBILITE PRIMARY KEY (id_type_sensibilite) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE SENSIBILITE ADD CONSTRAINT PK_SENSIBILITE PRIMARY KEY (id_sensibilite) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE PATIENT_TIERS_PAYEUR ADD CONSTRAINT PK_PATIENT_TIERS_PAYEUR PRIMARY KEY (id_tiers_payeur, id_patient) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE DIAGNOSTIC_PATHOLOGIE ADD CONSTRAINT PK_DIAGNOSTIC_PATHOLOGIE PRIMARY KEY (id_pathologie, id_patient) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE PRESCRIPTION ADD CONSTRAINT PK_PRESCRIPTION PRIMARY KEY (id_prescription) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE ALD ADD CONSTRAINT PK_ALD PRIMARY KEY (id_ald) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE PATIENT_ALD ADD CONSTRAINT PK_PATIENT_ALD PRIMARY KEY (id_ald, id_patient) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE FACTEUR_RISQUE ADD CONSTRAINT PK_FACTEUR_RISQUE PRIMARY KEY (id_facteur) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE PATIENT_FACTEUR_RISQUE ADD CONSTRAINT PK_PATIENT_FACTEUR_RISQUE PRIMARY KEY (id_patient, id_facteur) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE LIGNE_PRESCRIPTION_MEDICAMENT ADD CONSTRAINT PK_LIGNE_PRESCRIPTION_MED PRIMARY KEY (id_ligne_medicament) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE LIGNE_PRESCRIPTION_ACTE ADD CONSTRAINT PK_LIGNE_PRESCRIPTION_ACTE PRIMARY KEY (id_ligne_acte) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE EXAMEN ADD CONSTRAINT PK_EXAMEN PRIMARY KEY (id_examen) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE COMPTE_RENDU_EXAMEN ADD CONSTRAINT PK_COMPTE_RENDU_EXAMEN PRIMARY KEY (id_compte_rendu) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE ACTE_REALISE ADD CONSTRAINT PK_ACTE_REALISE PRIMARY KEY (id_acte) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE COMPTE_RENDU_OPERATOIRE ADD CONSTRAINT PK_COMPTE_RENDU_OPERATOIRE PRIMARY KEY (id_cr_op) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE TYPE_ANESTHESIE ADD CONSTRAINT PK_TYPE_ANESTHESIE PRIMARY KEY (id_type_anesthesie) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE ANESTHESIE ADD CONSTRAINT PK_ANESTHESIE PRIMARY KEY (id_anesthesie) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE TRANSFUSION ADD CONSTRAINT PK_TRANSFUSION PRIMARY KEY (id_transfusion) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE PRODUIT_SANGUIN ADD CONSTRAINT PK_PRODUIT_SANGUIN PRIMARY KEY (id_produit_sanguin) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE RECOMMANDATION ADD CONSTRAINT PK_RECOMMANDATION PRIMARY KEY (id_recommandation) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE CONSENTEMENT ADD CONSTRAINT PK_CONSENTEMENT PRIMARY KEY (id_consentement) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE PROFESSIONNEL_SPECIALITE ADD CONSTRAINT PK_PROFESSIONNEL_SPECIALITE PRIMARY KEY (id_professionnel, id_specialite) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE OPPOSITION_ACCES ADD CONSTRAINT PK_OPPOSITION_ACCES PRIMARY KEY (id_opposition_acces) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE ADRESSE_ETAB ADD CONSTRAINT PK_ADRESSE_ETAB PRIMARY KEY (id_adresse_etab) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE NOTE_SOIN_INF ADD CONSTRAINT PK_NOTE_SOIN_INF PRIMARY KEY (id_note_soin) USING INDEX TABLESPACE INDEX_DMI;

PROMPT'>> Modification des tables : création des contraintes uniques'
ALTER TABLE SERVICE ADD CONSTRAINT UK_SERVICE_RESPONSABLE_ID UNIQUE (id_responsable) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE PROFESSIONNEL ADD CONSTRAINT UK_PROFESSIONNEL_RPPS UNIQUE (numero_rpps) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE PATIENT ADD CONSTRAINT UK_PATIENT_EMAIL UNIQUE (email) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE PATIENT ADD CONSTRAINT UK_PATIENT_NUMERO_SS UNIQUE (numero_ss) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE HOSPITALISATION ADD CONSTRAINT UK_HOSPITALISATION_NUM_DOSSIER UNIQUE (num_dossier) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE COMPTE_RENDU_EXAMEN ADD CONSTRAINT UK_CR_EXAMEN_ID UNIQUE (id_examen) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE COMPTE_RENDU_OPERATOIRE ADD CONSTRAINT UK_CR_OP_ACTE_ID UNIQUE (id_acte) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE ANESTHESIE ADD CONSTRAINT UK_ANESTHESIE_ACTE_ID UNIQUE (id_acte_realise) USING INDEX TABLESPACE INDEX_DMI; 
ALTER TABLE CONSENTEMENT ADD CONSTRAINT UK_CONSENTEMENT_ACTE_ID UNIQUE (id_acte_realise) DEFERRABLE INITIALLY DEFERRED; 
ALTER TABLE PATHOLOGIE ADD CONSTRAINT UK_PATHOLOGIE_CODE UNIQUE (code) USING INDEX TABLESPACE INDEX_DMI;
ALTER TABLE TIERS_PAYEUR ADD CONSTRAINT UK_TIERS_PAYEUR_CODE UNIQUE (code) USING INDEX TABLESPACE INDEX_DMI;

PROMPT'>> Modification des tables : création des contraintes de vérification (CHECK)'
ALTER TABLE PATIENT ADD CONSTRAINT CHK_PATIENT_SEXE CHECK (sexe IN ('M', 'F')); 
ALTER TABLE PATIENT ADD CONSTRAINT CHK_PATIENT_GROUPE_SANGUIN CHECK (groupe_sanguin IS NULL OR groupe_sanguin IN ('A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'));
ALTER TABLE TYPE_ACTE_REFERENTIEL ADD CONSTRAINT CHK_TYPEACTE_ESTCHIR CHECK (est_chirurgical IN (0, 1));
ALTER TABLE PATIENT_TIERS_PAYEUR ADD CONSTRAINT CHK_PATTIERSP_NIVCOUV CHECK (niveau_couverture IN ('Basique', 'Intermédiaire', 'Renforcée', 'Complète', 'Hospitalisation Seule', 'Non Communiqué', 'Non Applicable') OR niveau_couverture IS NULL);
ALTER TABLE PATIENT_FACTEUR_RISQUE ADD CONSTRAINT CHK_PATFACT_INTENSITE CHECK (intensite IN ('Faible', 'Modéré', 'Élevé', 'Très Élevé', 'Occasionnel', 'Présent', 'Absent/Arrêté', 'Non Quantifiable', 'Non Communiqué') OR intensite IS NULL);
ALTER TABLE RECOMMANDATION ADD CONSTRAINT CHK_RECO_EMET_DEST CHECK (id_professionnel_emetteur <> id_professionnel_destinataire);

PROMPT'>> Modification des tables : création des FK'
-- ADRESSE_ETAB
ALTER TABLE ADRESSE_ETAB ADD CONSTRAINT FK_ADRETAB_ETAB FOREIGN KEY (id_etablissement) REFERENCES ETABLISSEMENT(id_etablissement) ON DELETE CASCADE;
-- SERVICE
ALTER TABLE SERVICE ADD CONSTRAINT FK_SERVICE_ETAB FOREIGN KEY (id_etablissement) REFERENCES ETABLISSEMENT(id_etablissement);
ALTER TABLE SERVICE ADD CONSTRAINT FK_SERVICE_RESP FOREIGN KEY (id_responsable) REFERENCES PROFESSIONNEL(id_professionnel) ON DELETE SET NULL;
-- PROFESSIONNEL
ALTER TABLE PROFESSIONNEL ADD CONSTRAINT FK_PRO_TYPEPRO FOREIGN KEY (id_type_pro) REFERENCES TYPE_PRO(id_type_pro);
ALTER TABLE PROFESSIONNEL ADD CONSTRAINT FK_PRO_SERVICE FOREIGN KEY (id_service) REFERENCES SERVICE(id_service) ON DELETE SET NULL;
-- PROFESSIONNEL_SPECIALITE
ALTER TABLE PROFESSIONNEL_SPECIALITE ADD CONSTRAINT FK_PROSPEC_PRO FOREIGN KEY (id_professionnel) REFERENCES PROFESSIONNEL(id_professionnel) ON DELETE CASCADE;
ALTER TABLE PROFESSIONNEL_SPECIALITE ADD CONSTRAINT FK_PROSPEC_SPEC FOREIGN KEY (id_specialite) REFERENCES SPECIALITE(id_specialite) ON DELETE CASCADE;
-- PATIENT
ALTER TABLE PATIENT ADD CONSTRAINT FK_PATIENT_MEDTRAITANT FOREIGN KEY (id_medecin_traitant) REFERENCES PROFESSIONNEL(id_professionnel) ON DELETE SET NULL;
ALTER TABLE PATIENT ADD CONSTRAINT FK_PATIENT_ADRESSE FOREIGN KEY (id_adresse) REFERENCES ADRESSE(id_adresse);
-- REPRESENTANT_LEGAL
ALTER TABLE REPRESENTANT_LEGAL ADD CONSTRAINT FK_REPLEGAL_ADRESSE FOREIGN KEY (id_adresse) REFERENCES ADRESSE(id_adresse);
ALTER TABLE REPRESENTANT_LEGAL ADD CONSTRAINT FK_REPLEGAL_TYPEREP FOREIGN KEY (id_type_representant) REFERENCES TYPE_REPRESENTANT(id_type_representant);
-- EST_REPRESENTE_PAR
ALTER TABLE EST_REPRESENTE_PAR ADD CONSTRAINT FK_ESTREP_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
ALTER TABLE EST_REPRESENTE_PAR ADD CONSTRAINT FK_ESTREP_REPRESENTANT FOREIGN KEY (id_representant) REFERENCES REPRESENTANT_LEGAL(id_representant) ON DELETE CASCADE;
-- MESURE_CORPORALE
ALTER TABLE MESURE_CORPORALE ADD CONSTRAINT FK_MESURE_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
-- ANTECEDENT
ALTER TABLE ANTECEDENT ADD CONSTRAINT FK_ANTECEDENT_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
ALTER TABLE ANTECEDENT ADD CONSTRAINT FK_ANTECEDENT_TYPE FOREIGN KEY (id_type_antecedent) REFERENCES TYPE_ANTECEDENT(id_type_antecedent);
-- VACCINATION
ALTER TABLE VACCINATION ADD CONSTRAINT FK_VACCINATION_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
-- SENSIBILITE
ALTER TABLE SENSIBILITE ADD CONSTRAINT FK_SENSIBILITE_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
ALTER TABLE SENSIBILITE ADD CONSTRAINT FK_SENSIBILITE_TYPE FOREIGN KEY (id_type_sensibilite) REFERENCES TYPE_SENSIBILITE(id_type_sensibilite);
-- HOSPITALISATION
ALTER TABLE HOSPITALISATION ADD CONSTRAINT FK_HOSP_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
ALTER TABLE HOSPITALISATION ADD CONSTRAINT FK_HOSP_SERVICE FOREIGN KEY (id_service) REFERENCES SERVICE(id_service);
ALTER TABLE HOSPITALISATION ADD CONSTRAINT FK_HOSP_TYPESORTIE FOREIGN KEY (id_type_sortie) REFERENCES TYPE_SORTIE(id_type_sortie);
-- PATIENT_TIERS_PAYEUR
ALTER TABLE PATIENT_TIERS_PAYEUR ADD CONSTRAINT FK_PATTIERSP_TIERS FOREIGN KEY (id_tiers_payeur) REFERENCES TIERS_PAYEUR(id_tiers_payeur);
ALTER TABLE PATIENT_TIERS_PAYEUR ADD CONSTRAINT FK_PATTIERSP_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
-- DIAGNOSTIC_PATHOLOGIE
ALTER TABLE DIAGNOSTIC_PATHOLOGIE ADD CONSTRAINT FK_DIAGPATH_PATHO FOREIGN KEY (id_pathologie) REFERENCES PATHOLOGIE(id_pathologie);
ALTER TABLE DIAGNOSTIC_PATHOLOGIE ADD CONSTRAINT FK_DIAGPATH_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
-- PRESCRIPTION
ALTER TABLE PRESCRIPTION ADD CONSTRAINT FK_PRESCR_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
ALTER TABLE PRESCRIPTION ADD CONSTRAINT FK_PRESCR_PRO FOREIGN KEY (id_prescripteur) REFERENCES PROFESSIONNEL(id_professionnel);
ALTER TABLE PRESCRIPTION ADD CONSTRAINT FK_PRESCR_HOSP FOREIGN KEY (id_hospitalisation) REFERENCES HOSPITALISATION(id_hospitalisation) ON DELETE SET NULL;
-- LIGNE_PRESCRIPTION_MEDICAMENT
ALTER TABLE LIGNE_PRESCRIPTION_MEDICAMENT ADD CONSTRAINT FK_LIGNEMED_PRESCR FOREIGN KEY (id_prescription) REFERENCES PRESCRIPTION(id_prescription) ON DELETE CASCADE;
ALTER TABLE LIGNE_PRESCRIPTION_MEDICAMENT ADD CONSTRAINT FK_LIGNEMED_MED FOREIGN KEY (id_medicament) REFERENCES MEDICAMENT(id_medicament);
-- LIGNE_PRESCRIPTION_ACTE
ALTER TABLE LIGNE_PRESCRIPTION_ACTE ADD CONSTRAINT FK_LIGNEACTE_PRESCR FOREIGN KEY (id_prescription) REFERENCES PRESCRIPTION(id_prescription) ON DELETE CASCADE;
ALTER TABLE LIGNE_PRESCRIPTION_ACTE ADD CONSTRAINT FK_LIGNEACTE_TYPEACTE FOREIGN KEY (id_type_acte) REFERENCES TYPE_ACTE_REFERENTIEL(id_type_acte);
-- PATIENT_ALD
ALTER TABLE PATIENT_ALD ADD CONSTRAINT FK_PATALD_ALD FOREIGN KEY (id_ald) REFERENCES ALD(id_ald);
ALTER TABLE PATIENT_ALD ADD CONSTRAINT FK_PATALD_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
-- PATIENT_FACTEUR_RISQUE
ALTER TABLE PATIENT_FACTEUR_RISQUE ADD CONSTRAINT FK_PATFACT_FACT FOREIGN KEY (id_facteur) REFERENCES FACTEUR_RISQUE(id_facteur);
ALTER TABLE PATIENT_FACTEUR_RISQUE ADD CONSTRAINT FK_PATFACT_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
-- EXAMEN
ALTER TABLE EXAMEN ADD CONSTRAINT FK_EXAMEN_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
ALTER TABLE EXAMEN ADD CONSTRAINT FK_EXAMEN_TYPE FOREIGN KEY (id_type_examen) REFERENCES TYPE_EXAMEN(id_type_examen);
ALTER TABLE EXAMEN ADD CONSTRAINT FK_EXAMEN_PRO_REAL FOREIGN KEY (id_professionnel_realisateur) REFERENCES PROFESSIONNEL(id_professionnel) ON DELETE SET NULL;
ALTER TABLE EXAMEN ADD CONSTRAINT FK_EXAMEN_PRO_PRESC FOREIGN KEY (id_professionnel_prescripteur) REFERENCES PROFESSIONNEL(id_professionnel) ON DELETE SET NULL;
ALTER TABLE EXAMEN ADD CONSTRAINT FK_EXAMEN_HOSP FOREIGN KEY (id_hospitalisation) REFERENCES HOSPITALISATION(id_hospitalisation) ON DELETE SET NULL;
ALTER TABLE EXAMEN ADD CONSTRAINT FK_EXAMEN_SERV FOREIGN KEY (id_service) REFERENCES SERVICE(id_service) ON DELETE SET NULL;
-- COMPTE_RENDU_EXAMEN
ALTER TABLE COMPTE_RENDU_EXAMEN ADD CONSTRAINT FK_CREXAM_EXAM FOREIGN KEY (id_examen) REFERENCES EXAMEN(id_examen) ON DELETE CASCADE;
ALTER TABLE COMPTE_RENDU_EXAMEN ADD CONSTRAINT FK_CREXAM_REDACTEUR FOREIGN KEY (id_redacteur) REFERENCES PROFESSIONNEL(id_professionnel);
-- ACTE_REALISE
ALTER TABLE ACTE_REALISE ADD CONSTRAINT FK_ACTEREAL_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
ALTER TABLE ACTE_REALISE ADD CONSTRAINT FK_ACTEREAL_TYPEACTE FOREIGN KEY (id_type_acte) REFERENCES TYPE_ACTE_REFERENTIEL(id_type_acte);
ALTER TABLE ACTE_REALISE ADD CONSTRAINT FK_ACTEREAL_PRO_REAL FOREIGN KEY (id_professionnel_realisateur) REFERENCES PROFESSIONNEL(id_professionnel);
ALTER TABLE ACTE_REALISE ADD CONSTRAINT FK_ACTEREAL_HOSP FOREIGN KEY (id_hospitalisation) REFERENCES HOSPITALISATION(id_hospitalisation) ON DELETE SET NULL;
-- COMPTE_RENDU_OPERATOIRE
ALTER TABLE COMPTE_RENDU_OPERATOIRE ADD CONSTRAINT FK_CROP_ACTE FOREIGN KEY (id_acte) REFERENCES ACTE_REALISE(id_acte) ON DELETE CASCADE;
-- ANESTHESIE
ALTER TABLE ANESTHESIE ADD CONSTRAINT FK_ANES_ACTE FOREIGN KEY (id_acte_realise) REFERENCES ACTE_REALISE(id_acte) ON DELETE CASCADE;
ALTER TABLE ANESTHESIE ADD CONSTRAINT FK_ANES_PRO_ANESTH FOREIGN KEY (id_anesthesiste) REFERENCES PROFESSIONNEL(id_professionnel);
ALTER TABLE ANESTHESIE ADD CONSTRAINT FK_ANES_TYPEANES FOREIGN KEY (id_type_anesthesie) REFERENCES TYPE_ANESTHESIE(id_type_anesthesie);
-- CONSENTEMENT
ALTER TABLE CONSENTEMENT ADD CONSTRAINT FK_CONSENT_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
ALTER TABLE CONSENTEMENT ADD CONSTRAINT FK_CONSENT_ACTE FOREIGN KEY (id_acte_realise) REFERENCES ACTE_REALISE(id_acte) ON DELETE SET NULL; 
-- TRANSFUSION
ALTER TABLE TRANSFUSION ADD CONSTRAINT FK_TRANSFU_HOSP FOREIGN KEY (id_hospitalisation) REFERENCES HOSPITALISATION(id_hospitalisation) ON DELETE SET NULL;
ALTER TABLE TRANSFUSION ADD CONSTRAINT FK_TRANSFU_PRODSANG FOREIGN KEY (id_produit_sanguin) REFERENCES PRODUIT_SANGUIN(id_produit_sanguin);
ALTER TABLE TRANSFUSION ADD CONSTRAINT FK_TRANSFU_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
-- RECOMMANDATION
ALTER TABLE RECOMMANDATION ADD CONSTRAINT FK_RECO_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
ALTER TABLE RECOMMANDATION ADD CONSTRAINT FK_RECO_PRO_EMET FOREIGN KEY (id_professionnel_emetteur) REFERENCES PROFESSIONNEL(id_professionnel);
ALTER TABLE RECOMMANDATION ADD CONSTRAINT FK_RECO_PRO_DEST FOREIGN KEY (id_professionnel_destinataire) REFERENCES PROFESSIONNEL(id_professionnel);
-- OPPOSITION_ACCES
ALTER TABLE OPPOSITION_ACCES ADD CONSTRAINT FK_OPPO_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
ALTER TABLE OPPOSITION_ACCES ADD CONSTRAINT FK_OPPO_PRO FOREIGN KEY (id_professionnel) REFERENCES PROFESSIONNEL(id_professionnel) ON DELETE SET NULL;
-- NOTE_SOIN_INF
ALTER TABLE NOTE_SOIN_INF ADD CONSTRAINT FK_NOTESOIN_PATIENT FOREIGN KEY (id_patient) REFERENCES PATIENT(id_patient) ON DELETE CASCADE;
ALTER TABLE NOTE_SOIN_INF ADD CONSTRAINT FK_NOTESOIN_PRO_INF FOREIGN KEY (id_infirmier) REFERENCES PROFESSIONNEL(id_professionnel);
ALTER TABLE NOTE_SOIN_INF ADD CONSTRAINT FK_NOTESOIN_HOSP FOREIGN KEY (id_hospitalisation) REFERENCES HOSPITALISATION(id_hospitalisation) ON DELETE SET NULL;

PROMPT '>> Création des Indexs pour les FKs et colonnes fréquentes'


CREATE INDEX IDX_ADRETAB_ETAB_FK ON ADRESSE_ETAB(id_etablissement) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_SERVICE_ETAB_FK ON SERVICE(id_etablissement) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PRO_TYPEPRO_FK ON PROFESSIONNEL(id_type_pro) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PRO_SERVICE_FK ON PROFESSIONNEL(id_service) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PROSPEC_PRO_FK ON PROFESSIONNEL_SPECIALITE(id_professionnel) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PROSPEC_SPEC_FK ON PROFESSIONNEL_SPECIALITE(id_specialite) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PATIENT_MEDTRAIT_FK ON PATIENT(id_medecin_traitant) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PATIENT_ADRESSE_FK ON PATIENT(id_adresse) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_REPLEGAL_ADRESSE_FK ON REPRESENTANT_LEGAL(id_adresse) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_REPLEGAL_TYPEREP_FK ON REPRESENTANT_LEGAL(id_type_representant) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_ESTREP_PATIENT_FK ON EST_REPRESENTE_PAR(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_ESTREP_REPLEGAL_FK ON EST_REPRESENTE_PAR(id_representant) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_MESURE_PATIENT_FK ON MESURE_CORPORALE(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_ANTECEDENT_PATIENT_FK ON ANTECEDENT(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_ANTECEDENT_TYPE_FK ON ANTECEDENT(id_type_antecedent) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_VACC_PATIENT_FK ON VACCINATION(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_SENSIB_PATIENT_FK ON SENSIBILITE(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_SENSIB_TYPE_FK ON SENSIBILITE(id_type_sensibilite) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_HOSP_PATIENT_FK ON HOSPITALISATION(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_HOSP_SERVICE_FK ON HOSPITALISATION(id_service) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_HOSP_TYPESORTIE_FK ON HOSPITALISATION(id_type_sortie) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PATTIERSP_TIERS_FK ON PATIENT_TIERS_PAYEUR(id_tiers_payeur) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PATTIERSP_PATIENT_FK ON PATIENT_TIERS_PAYEUR(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_DIAGPATH_PATHO_FK ON DIAGNOSTIC_PATHOLOGIE(id_pathologie) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_DIAGPATH_PATIENT_FK ON DIAGNOSTIC_PATHOLOGIE(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PRESCR_PATIENT_FK ON PRESCRIPTION(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PRESCR_PRO_FK ON PRESCRIPTION(id_prescripteur) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PRESCR_HOSP_FK ON PRESCRIPTION(id_hospitalisation) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_LIGNEMED_PRESCR_FK ON LIGNE_PRESCRIPTION_MEDICAMENT(id_prescription) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_LIGNEMED_MED_FK ON LIGNE_PRESCRIPTION_MEDICAMENT(id_medicament) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_LIGNEACTE_PRESCR_FK ON LIGNE_PRESCRIPTION_ACTE(id_prescription) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_LIGNEACTE_TYPEACTE_FK ON LIGNE_PRESCRIPTION_ACTE(id_type_acte) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PATALD_ALD_FK ON PATIENT_ALD(id_ald) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PATALD_PATIENT_FK ON PATIENT_ALD(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PATFACT_FACT_FK ON PATIENT_FACTEUR_RISQUE(id_facteur) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PATFACT_PATIENT_FK ON PATIENT_FACTEUR_RISQUE(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_EXAMEN_PATIENT_FK ON EXAMEN(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_EXAMEN_TYPE_FK ON EXAMEN(id_type_examen) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_EXAMEN_PRO_REAL_FK ON EXAMEN(id_professionnel_realisateur) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_EXAMEN_PRO_PRESC_FK ON EXAMEN(id_professionnel_prescripteur) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_EXAMEN_HOSP_FK ON EXAMEN(id_hospitalisation) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_EXAMEN_SERVICE_FK ON EXAMEN(id_service) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_CREXAM_REDACTEUR_FK ON COMPTE_RENDU_EXAMEN(id_redacteur) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_ACTEREAL_PATIENT_FK ON ACTE_REALISE(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_ACTEREAL_TYPEACTE_FK ON ACTE_REALISE(id_type_acte) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_ACTEREAL_PRO_REAL_FK ON ACTE_REALISE(id_professionnel_realisateur) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_ACTEREAL_HOSP_FK ON ACTE_REALISE(id_hospitalisation) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_ANES_PRO_ANES_FK ON ANESTHESIE(id_anesthesiste) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_ANES_TYPEANES_FK ON ANESTHESIE(id_type_anesthesie) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_CONSENT_PATIENT_FK ON CONSENTEMENT(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_TRANSFU_HOSP_FK ON TRANSFUSION(id_hospitalisation) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_TRANSFU_PRODSANG_FK ON TRANSFUSION(id_produit_sanguin) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_TRANSFU_PATIENT_FK ON TRANSFUSION(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_RECO_PATIENT_FK ON RECOMMANDATION(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_RECO_PRO_EMET_FK ON RECOMMANDATION(id_professionnel_emetteur) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_RECO_PRO_DEST_FK ON RECOMMANDATION(id_professionnel_destinataire) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_OPPO_PATIENT_FK ON OPPOSITION_ACCES(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_OPPO_PRO_FK ON OPPOSITION_ACCES(id_professionnel) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_NOTESOIN_PATIENT_FK ON NOTE_SOIN_INF(id_patient) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_NOTESOIN_PRO_INF_FK ON NOTE_SOIN_INF(id_infirmier) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_NOTESOIN_HOSP_FK ON NOTE_SOIN_INF(id_hospitalisation) TABLESPACE INDEX_DMI;
CREATE INDEX IDX_PATIENT_DATE_NAISSANCE ON PATIENT(date_naissance) TABLESPACE INDEX_DMI;

PROMPT '>> Fin du script de création'

Disconnect;

SPOOL OFF